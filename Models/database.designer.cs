#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mash_v0._3.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mash_main")]
	public partial class databaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFile(File instance);
    partial void UpdateFile(File instance);
    partial void DeleteFile(File instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertPrivateMessage(PrivateMessage instance);
    partial void UpdatePrivateMessage(PrivateMessage instance);
    partial void DeletePrivateMessage(PrivateMessage instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void Insertsif_InviteProjectUser(sif_InviteProjectUser instance);
    partial void Updatesif_InviteProjectUser(sif_InviteProjectUser instance);
    partial void Deletesif_InviteProjectUser(sif_InviteProjectUser instance);
    partial void Insertsif_ProjectFile(sif_ProjectFile instance);
    partial void Updatesif_ProjectFile(sif_ProjectFile instance);
    partial void Deletesif_ProjectFile(sif_ProjectFile instance);
    partial void Insertsif_ProjectUser(sif_ProjectUser instance);
    partial void Updatesif_ProjectUser(sif_ProjectUser instance);
    partial void Deletesif_ProjectUser(sif_ProjectUser instance);
    partial void Insertsif_TagFile(sif_TagFile instance);
    partial void Updatesif_TagFile(sif_TagFile instance);
    partial void Deletesif_TagFile(sif_TagFile instance);
    partial void InsertsifProjectUserRole(sifProjectUserRole instance);
    partial void UpdatesifProjectUserRole(sifProjectUserRole instance);
    partial void DeletesifProjectUserRole(sifProjectUserRole instance);
    partial void InsertsifTaskUserProject(sifTaskUserProject instance);
    partial void UpdatesifTaskUserProject(sifTaskUserProject instance);
    partial void DeletesifTaskUserProject(sifTaskUserProject instance);
    partial void InsertsifUserTask(sifUserTask instance);
    partial void UpdatesifUserTask(sifUserTask instance);
    partial void DeletesifUserTask(sifUserTask instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    #endregion
		
		public databaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["mash_mainConnectionString"].ConnectionString, mappingSource)
    {
			OnCreated();
		}
		
		public databaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<File> Files
		{
			get
			{
				return this.GetTable<File>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<PrivateMessage> PrivateMessages
		{
			get
			{
				return this.GetTable<PrivateMessage>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<sif_InviteProjectUser> sif_InviteProjectUsers
		{
			get
			{
				return this.GetTable<sif_InviteProjectUser>();
			}
		}
		
		public System.Data.Linq.Table<sif_ProjectFile> sif_ProjectFiles
		{
			get
			{
				return this.GetTable<sif_ProjectFile>();
			}
		}
		
		public System.Data.Linq.Table<sif_ProjectUser> sif_ProjectUsers
		{
			get
			{
				return this.GetTable<sif_ProjectUser>();
			}
		}
		
		public System.Data.Linq.Table<sif_TagFile> sif_TagFiles
		{
			get
			{
				return this.GetTable<sif_TagFile>();
			}
		}
		
		public System.Data.Linq.Table<sifProjectUserRole> sifProjectUserRoles
		{
			get
			{
				return this.GetTable<sifProjectUserRole>();
			}
		}
		
		public System.Data.Linq.Table<sifTaskUserProject> sifTaskUserProjects
		{
			get
			{
				return this.GetTable<sifTaskUserProject>();
			}
		}
		
		public System.Data.Linq.Table<sifUserTask> sifUserTasks
		{
			get
			{
				return this.GetTable<sifUserTask>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tags
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.[File]")]
	public partial class File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idFile;
		
		private string _fileName;
		
		private string _path;
		
		private string _description;
		
		private int _idOwner;
		
		private System.DateTime _dateCreated;
		
		private System.DateTime _dateUpdated;
		
		private EntitySet<sif_ProjectFile> _sif_ProjectFiles;
		
		private EntitySet<sif_TagFile> _sif_TagFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFileChanging(int value);
    partial void OnidFileChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnidOwnerChanging(int value);
    partial void OnidOwnerChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OndateUpdatedChanging(System.DateTime value);
    partial void OndateUpdatedChanged();
    #endregion
		
		public File()
		{
			this._sif_ProjectFiles = new EntitySet<sif_ProjectFile>(new Action<sif_ProjectFile>(this.attach_sif_ProjectFiles), new Action<sif_ProjectFile>(this.detach_sif_ProjectFiles));
			this._sif_TagFiles = new EntitySet<sif_TagFile>(new Action<sif_TagFile>(this.attach_sif_TagFiles), new Action<sif_TagFile>(this.detach_sif_TagFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFile", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idFile
		{
			get
			{
				return this._idFile;
			}
			set
			{
				if ((this._idFile != value))
				{
					this.OnidFileChanging(value);
					this.SendPropertyChanging();
					this._idFile = value;
					this.SendPropertyChanged("idFile");
					this.OnidFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOwner", DbType="Int NOT NULL")]
		public int idOwner
		{
			get
			{
				return this._idOwner;
			}
			set
			{
				if ((this._idOwner != value))
				{
					this.OnidOwnerChanging(value);
					this.SendPropertyChanging();
					this._idOwner = value;
					this.SendPropertyChanged("idOwner");
					this.OnidOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime dateUpdated
		{
			get
			{
				return this._dateUpdated;
			}
			set
			{
				if ((this._dateUpdated != value))
				{
					this.OndateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._dateUpdated = value;
					this.SendPropertyChanged("dateUpdated");
					this.OndateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_sif_ProjectFile", Storage="_sif_ProjectFiles", ThisKey="idFile", OtherKey="idFile")]
		public EntitySet<sif_ProjectFile> sif_ProjectFiles
		{
			get
			{
				return this._sif_ProjectFiles;
			}
			set
			{
				this._sif_ProjectFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_sif_TagFile", Storage="_sif_TagFiles", ThisKey="idFile", OtherKey="idFile")]
		public EntitySet<sif_TagFile> sif_TagFiles
		{
			get
			{
				return this._sif_TagFiles;
			}
			set
			{
				this._sif_TagFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sif_ProjectFiles(sif_ProjectFile entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_sif_ProjectFiles(sif_ProjectFile entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
		
		private void attach_sif_TagFiles(sif_TagFile entity)
		{
			this.SendPropertyChanging();
			entity.File = this;
		}
		
		private void detach_sif_TagFiles(sif_TagFile entity)
		{
			this.SendPropertyChanging();
			entity.File = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUser;
		
		private string _email;
		
		private string _firstname;
		
		private string _lastname;
		
		private System.DateTime _dateRegistered;
		
		private System.DateTime _dateLastVisited;
		
		private string _password;
		
		private System.Nullable<bool> _isVIP;
		
		private EntitySet<sif_InviteProjectUser> _sif_InviteProjectUsers;
		
		private EntitySet<sif_ProjectUser> _sif_ProjectUsers;
		
		private EntitySet<sifTaskUserProject> _sifTaskUserProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OndateRegisteredChanging(System.DateTime value);
    partial void OndateRegisteredChanged();
    partial void OndateLastVisitedChanging(System.DateTime value);
    partial void OndateLastVisitedChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnisVIPChanging(System.Nullable<bool> value);
    partial void OnisVIPChanged();
    #endregion
		
		public User()
		{
			this._sif_InviteProjectUsers = new EntitySet<sif_InviteProjectUser>(new Action<sif_InviteProjectUser>(this.attach_sif_InviteProjectUsers), new Action<sif_InviteProjectUser>(this.detach_sif_InviteProjectUsers));
			this._sif_ProjectUsers = new EntitySet<sif_ProjectUser>(new Action<sif_ProjectUser>(this.attach_sif_ProjectUsers), new Action<sif_ProjectUser>(this.detach_sif_ProjectUsers));
			this._sifTaskUserProjects = new EntitySet<sifTaskUserProject>(new Action<sifTaskUserProject>(this.attach_sifTaskUserProjects), new Action<sifTaskUserProject>(this.detach_sifTaskUserProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateRegistered", DbType="DateTime NOT NULL")]
		public System.DateTime dateRegistered
		{
			get
			{
				return this._dateRegistered;
			}
			set
			{
				if ((this._dateRegistered != value))
				{
					this.OndateRegisteredChanging(value);
					this.SendPropertyChanging();
					this._dateRegistered = value;
					this.SendPropertyChanged("dateRegistered");
					this.OndateRegisteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateLastVisited", DbType="DateTime NOT NULL")]
		public System.DateTime dateLastVisited
		{
			get
			{
				return this._dateLastVisited;
			}
			set
			{
				if ((this._dateLastVisited != value))
				{
					this.OndateLastVisitedChanging(value);
					this.SendPropertyChanging();
					this._dateLastVisited = value;
					this.SendPropertyChanged("dateLastVisited");
					this.OndateLastVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isVIP", DbType="Bit")]
		public System.Nullable<bool> isVIP
		{
			get
			{
				return this._isVIP;
			}
			set
			{
				if ((this._isVIP != value))
				{
					this.OnisVIPChanging(value);
					this.SendPropertyChanging();
					this._isVIP = value;
					this.SendPropertyChanged("isVIP");
					this.OnisVIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_sif_InviteProjectUser", Storage="_sif_InviteProjectUsers", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<sif_InviteProjectUser> sif_InviteProjectUsers
		{
			get
			{
				return this._sif_InviteProjectUsers;
			}
			set
			{
				this._sif_InviteProjectUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_sif_ProjectUser", Storage="_sif_ProjectUsers", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<sif_ProjectUser> sif_ProjectUsers
		{
			get
			{
				return this._sif_ProjectUsers;
			}
			set
			{
				this._sif_ProjectUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_sifTaskUserProject", Storage="_sifTaskUserProjects", ThisKey="idUser", OtherKey="idUser")]
		public EntitySet<sifTaskUserProject> sifTaskUserProjects
		{
			get
			{
				return this._sifTaskUserProjects;
			}
			set
			{
				this._sifTaskUserProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sif_InviteProjectUsers(sif_InviteProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_sif_InviteProjectUsers(sif_InviteProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_sif_ProjectUsers(sif_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_sif_ProjectUsers(sif_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_sifTaskUserProjects(sifTaskUserProject entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_sifTaskUserProjects(sifTaskUserProject entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.Message")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMessage;
		
		private System.Nullable<int> _idMessageTopic;
		
		private string _messageContent;
		
		private System.DateTime _timeCreated;
		
		private System.Nullable<int> _idMessageAuthor;
		
		private System.Nullable<int> _idProject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMessageChanging(int value);
    partial void OnidMessageChanged();
    partial void OnidMessageTopicChanging(System.Nullable<int> value);
    partial void OnidMessageTopicChanged();
    partial void OnmessageContentChanging(string value);
    partial void OnmessageContentChanged();
    partial void OntimeCreatedChanging(System.DateTime value);
    partial void OntimeCreatedChanged();
    partial void OnidMessageAuthorChanging(System.Nullable<int> value);
    partial void OnidMessageAuthorChanged();
    partial void OnidProjectChanging(System.Nullable<int> value);
    partial void OnidProjectChanged();
    #endregion
		
		public Message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessage", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMessage
		{
			get
			{
				return this._idMessage;
			}
			set
			{
				if ((this._idMessage != value))
				{
					this.OnidMessageChanging(value);
					this.SendPropertyChanging();
					this._idMessage = value;
					this.SendPropertyChanged("idMessage");
					this.OnidMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessageTopic", DbType="Int")]
		public System.Nullable<int> idMessageTopic
		{
			get
			{
				return this._idMessageTopic;
			}
			set
			{
				if ((this._idMessageTopic != value))
				{
					this.OnidMessageTopicChanging(value);
					this.SendPropertyChanging();
					this._idMessageTopic = value;
					this.SendPropertyChanged("idMessageTopic");
					this.OnidMessageTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_messageContent", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string messageContent
		{
			get
			{
				return this._messageContent;
			}
			set
			{
				if ((this._messageContent != value))
				{
					this.OnmessageContentChanging(value);
					this.SendPropertyChanging();
					this._messageContent = value;
					this.SendPropertyChanged("messageContent");
					this.OnmessageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime timeCreated
		{
			get
			{
				return this._timeCreated;
			}
			set
			{
				if ((this._timeCreated != value))
				{
					this.OntimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._timeCreated = value;
					this.SendPropertyChanged("timeCreated");
					this.OntimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessageAuthor", DbType="Int")]
		public System.Nullable<int> idMessageAuthor
		{
			get
			{
				return this._idMessageAuthor;
			}
			set
			{
				if ((this._idMessageAuthor != value))
				{
					this.OnidMessageAuthorChanging(value);
					this.SendPropertyChanging();
					this._idMessageAuthor = value;
					this.SendPropertyChanged("idMessageAuthor");
					this.OnidMessageAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", DbType="Int")]
		public System.Nullable<int> idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.PrivateMessage")]
	public partial class PrivateMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPrivateMessage;
		
		private string _idMessageHeader;
		
		private string _idMessageText;
		
		private int _idFrom;
		
		private int _idTo;
		
		private System.DateTime _dateSent;
		
		private System.Nullable<bool> _read;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPrivateMessageChanging(int value);
    partial void OnidPrivateMessageChanged();
    partial void OnidMessageHeaderChanging(string value);
    partial void OnidMessageHeaderChanged();
    partial void OnidMessageTextChanging(string value);
    partial void OnidMessageTextChanged();
    partial void OnidFromChanging(int value);
    partial void OnidFromChanged();
    partial void OnidToChanging(int value);
    partial void OnidToChanged();
    partial void OndateSentChanging(System.DateTime value);
    partial void OndateSentChanged();
    partial void OnreadChanging(System.Nullable<bool> value);
    partial void OnreadChanged();
    #endregion
		
		public PrivateMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPrivateMessage", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPrivateMessage
		{
			get
			{
				return this._idPrivateMessage;
			}
			set
			{
				if ((this._idPrivateMessage != value))
				{
					this.OnidPrivateMessageChanging(value);
					this.SendPropertyChanging();
					this._idPrivateMessage = value;
					this.SendPropertyChanged("idPrivateMessage");
					this.OnidPrivateMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessageHeader", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string idMessageHeader
		{
			get
			{
				return this._idMessageHeader;
			}
			set
			{
				if ((this._idMessageHeader != value))
				{
					this.OnidMessageHeaderChanging(value);
					this.SendPropertyChanging();
					this._idMessageHeader = value;
					this.SendPropertyChanged("idMessageHeader");
					this.OnidMessageHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMessageText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string idMessageText
		{
			get
			{
				return this._idMessageText;
			}
			set
			{
				if ((this._idMessageText != value))
				{
					this.OnidMessageTextChanging(value);
					this.SendPropertyChanging();
					this._idMessageText = value;
					this.SendPropertyChanged("idMessageText");
					this.OnidMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFrom", DbType="Int NOT NULL")]
		public int idFrom
		{
			get
			{
				return this._idFrom;
			}
			set
			{
				if ((this._idFrom != value))
				{
					this.OnidFromChanging(value);
					this.SendPropertyChanging();
					this._idFrom = value;
					this.SendPropertyChanged("idFrom");
					this.OnidFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTo", DbType="Int NOT NULL")]
		public int idTo
		{
			get
			{
				return this._idTo;
			}
			set
			{
				if ((this._idTo != value))
				{
					this.OnidToChanging(value);
					this.SendPropertyChanging();
					this._idTo = value;
					this.SendPropertyChanged("idTo");
					this.OnidToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateSent", DbType="DateTime NOT NULL")]
		public System.DateTime dateSent
		{
			get
			{
				return this._dateSent;
			}
			set
			{
				if ((this._dateSent != value))
				{
					this.OndateSentChanging(value);
					this.SendPropertyChanging();
					this._dateSent = value;
					this.SendPropertyChanged("dateSent");
					this.OndateSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[read]", Storage="_read", DbType="Bit")]
		public System.Nullable<bool> read
		{
			get
			{
				return this._read;
			}
			set
			{
				if ((this._read != value))
				{
					this.OnreadChanging(value);
					this.SendPropertyChanging();
					this._read = value;
					this.SendPropertyChanged("read");
					this.OnreadChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.Project")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProject;
		
		private string _projectName;
		
		private System.DateTime _dateCreated;
		
		private int _idOwner;
		
		private string _description;
		
		private EntitySet<sif_InviteProjectUser> _sif_InviteProjectUsers;
		
		private EntitySet<sif_ProjectFile> _sif_ProjectFiles;
		
		private EntitySet<sif_ProjectUser> _sif_ProjectUsers;
		
		private EntitySet<sifTaskUserProject> _sifTaskUserProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjectChanging(int value);
    partial void OnidProjectChanged();
    partial void OnprojectNameChanging(string value);
    partial void OnprojectNameChanged();
    partial void OndateCreatedChanging(System.DateTime value);
    partial void OndateCreatedChanged();
    partial void OnidOwnerChanging(int value);
    partial void OnidOwnerChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Project()
		{
			this._sif_InviteProjectUsers = new EntitySet<sif_InviteProjectUser>(new Action<sif_InviteProjectUser>(this.attach_sif_InviteProjectUsers), new Action<sif_InviteProjectUser>(this.detach_sif_InviteProjectUsers));
			this._sif_ProjectFiles = new EntitySet<sif_ProjectFile>(new Action<sif_ProjectFile>(this.attach_sif_ProjectFiles), new Action<sif_ProjectFile>(this.detach_sif_ProjectFiles));
			this._sif_ProjectUsers = new EntitySet<sif_ProjectUser>(new Action<sif_ProjectUser>(this.attach_sif_ProjectUsers), new Action<sif_ProjectUser>(this.detach_sif_ProjectUsers));
			this._sifTaskUserProjects = new EntitySet<sifTaskUserProject>(new Action<sifTaskUserProject>(this.attach_sifTaskUserProjects), new Action<sifTaskUserProject>(this.detach_sifTaskUserProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string projectName
		{
			get
			{
				return this._projectName;
			}
			set
			{
				if ((this._projectName != value))
				{
					this.OnprojectNameChanging(value);
					this.SendPropertyChanging();
					this._projectName = value;
					this.SendPropertyChanged("projectName");
					this.OnprojectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idOwner", DbType="Int NOT NULL")]
		public int idOwner
		{
			get
			{
				return this._idOwner;
			}
			set
			{
				if ((this._idOwner != value))
				{
					this.OnidOwnerChanging(value);
					this.SendPropertyChanging();
					this._idOwner = value;
					this.SendPropertyChanged("idOwner");
					this.OnidOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sif_InviteProjectUser", Storage="_sif_InviteProjectUsers", ThisKey="idProject", OtherKey="idProject")]
		public EntitySet<sif_InviteProjectUser> sif_InviteProjectUsers
		{
			get
			{
				return this._sif_InviteProjectUsers;
			}
			set
			{
				this._sif_InviteProjectUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sif_ProjectFile", Storage="_sif_ProjectFiles", ThisKey="idProject", OtherKey="idProject")]
		public EntitySet<sif_ProjectFile> sif_ProjectFiles
		{
			get
			{
				return this._sif_ProjectFiles;
			}
			set
			{
				this._sif_ProjectFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sif_ProjectUser", Storage="_sif_ProjectUsers", ThisKey="idProject", OtherKey="idProject")]
		public EntitySet<sif_ProjectUser> sif_ProjectUsers
		{
			get
			{
				return this._sif_ProjectUsers;
			}
			set
			{
				this._sif_ProjectUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sifTaskUserProject", Storage="_sifTaskUserProjects", ThisKey="idProject", OtherKey="idProject")]
		public EntitySet<sifTaskUserProject> sifTaskUserProjects
		{
			get
			{
				return this._sifTaskUserProjects;
			}
			set
			{
				this._sifTaskUserProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sif_InviteProjectUsers(sif_InviteProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_sif_InviteProjectUsers(sif_InviteProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_sif_ProjectFiles(sif_ProjectFile entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_sif_ProjectFiles(sif_ProjectFile entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_sif_ProjectUsers(sif_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_sif_ProjectUsers(sif_ProjectUser entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_sifTaskUserProjects(sifTaskUserProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_sifTaskUserProjects(sifTaskUserProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sif_InviteProjectUser")]
	public partial class sif_InviteProjectUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProject;
		
		private int _idUser;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjectChanging(int value);
    partial void OnidProjectChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    #endregion
		
		public sif_InviteProjectUser()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sif_InviteProjectUser", Storage="_Project", ThisKey="idProject", OtherKey="idProject", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.sif_InviteProjectUsers.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.sif_InviteProjectUsers.Add(this);
						this._idProject = value.idProject;
					}
					else
					{
						this._idProject = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_sif_InviteProjectUser", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.sif_InviteProjectUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.sif_InviteProjectUsers.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sif_ProjectFile")]
	public partial class sif_ProjectFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProject;
		
		private int _idFile;
		
		private EntityRef<File> _File;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjectChanging(int value);
    partial void OnidProjectChanged();
    partial void OnidFileChanging(int value);
    partial void OnidFileChanged();
    #endregion
		
		public sif_ProjectFile()
		{
			this._File = default(EntityRef<File>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFile", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFile
		{
			get
			{
				return this._idFile;
			}
			set
			{
				if ((this._idFile != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFileChanging(value);
					this.SendPropertyChanging();
					this._idFile = value;
					this.SendPropertyChanged("idFile");
					this.OnidFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_sif_ProjectFile", Storage="_File", ThisKey="idFile", OtherKey="idFile", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.sif_ProjectFiles.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.sif_ProjectFiles.Add(this);
						this._idFile = value.idFile;
					}
					else
					{
						this._idFile = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sif_ProjectFile", Storage="_Project", ThisKey="idProject", OtherKey="idProject", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.sif_ProjectFiles.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.sif_ProjectFiles.Add(this);
						this._idProject = value.idProject;
					}
					else
					{
						this._idProject = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sif_ProjectUser")]
	public partial class sif_ProjectUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProject;
		
		private int _idUser;
		
		private System.Nullable<int> _idUserRole;
		
		private System.Nullable<System.DateTime> _dateAssigned;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjectChanging(int value);
    partial void OnidProjectChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnidUserRoleChanging(System.Nullable<int> value);
    partial void OnidUserRoleChanged();
    partial void OndateAssignedChanging(System.Nullable<System.DateTime> value);
    partial void OndateAssignedChanged();
    #endregion
		
		public sif_ProjectUser()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserRole", DbType="Int")]
		public System.Nullable<int> idUserRole
		{
			get
			{
				return this._idUserRole;
			}
			set
			{
				if ((this._idUserRole != value))
				{
					this.OnidUserRoleChanging(value);
					this.SendPropertyChanging();
					this._idUserRole = value;
					this.SendPropertyChanged("idUserRole");
					this.OnidUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAssigned", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateAssigned
		{
			get
			{
				return this._dateAssigned;
			}
			set
			{
				if ((this._dateAssigned != value))
				{
					this.OndateAssignedChanging(value);
					this.SendPropertyChanging();
					this._dateAssigned = value;
					this.SendPropertyChanged("dateAssigned");
					this.OndateAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sif_ProjectUser", Storage="_Project", ThisKey="idProject", OtherKey="idProject", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.sif_ProjectUsers.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.sif_ProjectUsers.Add(this);
						this._idProject = value.idProject;
					}
					else
					{
						this._idProject = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_sif_ProjectUser", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.sif_ProjectUsers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.sif_ProjectUsers.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sif_TagFile")]
	public partial class sif_TagFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTag;
		
		private int _idFile;
		
		private EntityRef<File> _File;
		
		private EntityRef<Tag> _Tag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTagChanging(int value);
    partial void OnidTagChanged();
    partial void OnidFileChanging(int value);
    partial void OnidFileChanged();
    #endregion
		
		public sif_TagFile()
		{
			this._File = default(EntityRef<File>);
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTag", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTag
		{
			get
			{
				return this._idTag;
			}
			set
			{
				if ((this._idTag != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTagChanging(value);
					this.SendPropertyChanging();
					this._idTag = value;
					this.SendPropertyChanged("idTag");
					this.OnidTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFile", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idFile
		{
			get
			{
				return this._idFile;
			}
			set
			{
				if ((this._idFile != value))
				{
					if (this._File.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFileChanging(value);
					this.SendPropertyChanging();
					this._idFile = value;
					this.SendPropertyChanged("idFile");
					this.OnidFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="File_sif_TagFile", Storage="_File", ThisKey="idFile", OtherKey="idFile", IsForeignKey=true)]
		public File File
		{
			get
			{
				return this._File.Entity;
			}
			set
			{
				File previousValue = this._File.Entity;
				if (((previousValue != value) 
							|| (this._File.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._File.Entity = null;
						previousValue.sif_TagFiles.Remove(this);
					}
					this._File.Entity = value;
					if ((value != null))
					{
						value.sif_TagFiles.Add(this);
						this._idFile = value.idFile;
					}
					else
					{
						this._idFile = default(int);
					}
					this.SendPropertyChanged("File");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_sif_TagFile", Storage="_Tag", ThisKey="idTag", OtherKey="idTag", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.sif_TagFiles.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.sif_TagFiles.Add(this);
						this._idTag = value.idTag;
					}
					else
					{
						this._idTag = default(int);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sifProjectUserRole")]
	public partial class sifProjectUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProject;
		
		private int _idUserRole;
		
		private string _userRoleDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjectChanging(int value);
    partial void OnidProjectChanged();
    partial void OnidUserRoleChanging(int value);
    partial void OnidUserRoleChanged();
    partial void OnuserRoleDescriptionChanging(string value);
    partial void OnuserRoleDescriptionChanged();
    #endregion
		
		public sifProjectUserRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUserRole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUserRole
		{
			get
			{
				return this._idUserRole;
			}
			set
			{
				if ((this._idUserRole != value))
				{
					this.OnidUserRoleChanging(value);
					this.SendPropertyChanging();
					this._idUserRole = value;
					this.SendPropertyChanged("idUserRole");
					this.OnidUserRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userRoleDescription", DbType="Char(40)")]
		public string userRoleDescription
		{
			get
			{
				return this._userRoleDescription;
			}
			set
			{
				if ((this._userRoleDescription != value))
				{
					this.OnuserRoleDescriptionChanging(value);
					this.SendPropertyChanging();
					this._userRoleDescription = value;
					this.SendPropertyChanged("userRoleDescription");
					this.OnuserRoleDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sifTaskUserProject")]
	public partial class sifTaskUserProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTask;
		
		private int _idProject;
		
		private int _idUser;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<User> _User;
		
		private EntityRef<Task> _Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTaskChanging(int value);
    partial void OnidTaskChanged();
    partial void OnidProjectChanging(int value);
    partial void OnidProjectChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    #endregion
		
		public sifTaskUserProject()
		{
			this._Project = default(EntityRef<Project>);
			this._User = default(EntityRef<User>);
			this._Task = default(EntityRef<Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTask", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTask
		{
			get
			{
				return this._idTask;
			}
			set
			{
				if ((this._idTask != value))
				{
					if (this._Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTaskChanging(value);
					this.SendPropertyChanging();
					this._idTask = value;
					this.SendPropertyChanged("idTask");
					this.OnidTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProject", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idProject
		{
			get
			{
				return this._idProject;
			}
			set
			{
				if ((this._idProject != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProjectChanging(value);
					this.SendPropertyChanging();
					this._idProject = value;
					this.SendPropertyChanged("idProject");
					this.OnidProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL")]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_sifTaskUserProject", Storage="_Project", ThisKey="idProject", OtherKey="idProject", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.sifTaskUserProjects.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.sifTaskUserProjects.Add(this);
						this._idProject = value.idProject;
					}
					else
					{
						this._idProject = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_sifTaskUserProject", Storage="_User", ThisKey="idUser", OtherKey="idUser", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.sifTaskUserProjects.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.sifTaskUserProjects.Add(this);
						this._idUser = value.idUser;
					}
					else
					{
						this._idUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_sifTaskUserProject", Storage="_Task", ThisKey="idTask", OtherKey="idTask", IsForeignKey=true)]
		public Task Task
		{
			get
			{
				return this._Task.Entity;
			}
			set
			{
				Task previousValue = this._Task.Entity;
				if (((previousValue != value) 
							|| (this._Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task.Entity = null;
						previousValue.sifTaskUserProjects.Remove(this);
					}
					this._Task.Entity = value;
					if ((value != null))
					{
						value.sifTaskUserProjects.Add(this);
						this._idTask = value.idTask;
					}
					else
					{
						this._idTask = default(int);
					}
					this.SendPropertyChanged("Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.sifUserTask")]
	public partial class sifUserTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTask;
		
		private int _idUser;
		
		private int _idTag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTaskChanging(int value);
    partial void OnidTaskChanged();
    partial void OnidUserChanging(int value);
    partial void OnidUserChanged();
    partial void OnidTagChanging(int value);
    partial void OnidTagChanged();
    #endregion
		
		public sifUserTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTask", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTask
		{
			get
			{
				return this._idTask;
			}
			set
			{
				if ((this._idTask != value))
				{
					this.OnidTaskChanging(value);
					this.SendPropertyChanging();
					this._idTask = value;
					this.SendPropertyChanged("idTask");
					this.OnidTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUser", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idUser
		{
			get
			{
				return this._idUser;
			}
			set
			{
				if ((this._idUser != value))
				{
					this.OnidUserChanging(value);
					this.SendPropertyChanging();
					this._idUser = value;
					this.SendPropertyChanged("idUser");
					this.OnidUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTag", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTag
		{
			get
			{
				return this._idTag;
			}
			set
			{
				if ((this._idTag != value))
				{
					this.OnidTagChanging(value);
					this.SendPropertyChanging();
					this._idTag = value;
					this.SendPropertyChanged("idTag");
					this.OnidTagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTag;
		
		private string _tagName;
		
		private EntitySet<sif_TagFile> _sif_TagFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTagChanging(int value);
    partial void OnidTagChanged();
    partial void OntagNameChanging(string value);
    partial void OntagNameChanged();
    #endregion
		
		public Tag()
		{
			this._sif_TagFiles = new EntitySet<sif_TagFile>(new Action<sif_TagFile>(this.attach_sif_TagFiles), new Action<sif_TagFile>(this.detach_sif_TagFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTag", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTag
		{
			get
			{
				return this._idTag;
			}
			set
			{
				if ((this._idTag != value))
				{
					this.OnidTagChanging(value);
					this.SendPropertyChanging();
					this._idTag = value;
					this.SendPropertyChanged("idTag");
					this.OnidTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tagName", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string tagName
		{
			get
			{
				return this._tagName;
			}
			set
			{
				if ((this._tagName != value))
				{
					this.OntagNameChanging(value);
					this.SendPropertyChanging();
					this._tagName = value;
					this.SendPropertyChanged("tagName");
					this.OntagNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tag_sif_TagFile", Storage="_sif_TagFiles", ThisKey="idTag", OtherKey="idTag")]
		public EntitySet<sif_TagFile> sif_TagFiles
		{
			get
			{
				return this._sif_TagFiles;
			}
			set
			{
				this._sif_TagFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sif_TagFiles(sif_TagFile entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_sif_TagFiles(sif_TagFile entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mash.Task")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTask;
		
		private string _description;
		
		private string _taskHeader;
		
		private System.Nullable<System.DateTime> _taskDeadline;
		
		private System.Nullable<int> _taskDone;
		
		private EntitySet<sifTaskUserProject> _sifTaskUserProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTaskChanging(int value);
    partial void OnidTaskChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntaskHeaderChanging(string value);
    partial void OntaskHeaderChanged();
    partial void OntaskDeadlineChanging(System.Nullable<System.DateTime> value);
    partial void OntaskDeadlineChanged();
    partial void OntaskDoneChanging(System.Nullable<int> value);
    partial void OntaskDoneChanged();
    #endregion
		
		public Task()
		{
			this._sifTaskUserProjects = new EntitySet<sifTaskUserProject>(new Action<sifTaskUserProject>(this.attach_sifTaskUserProjects), new Action<sifTaskUserProject>(this.detach_sifTaskUserProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTask", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTask
		{
			get
			{
				return this._idTask;
			}
			set
			{
				if ((this._idTask != value))
				{
					this.OnidTaskChanging(value);
					this.SendPropertyChanging();
					this._idTask = value;
					this.SendPropertyChanged("idTask");
					this.OnidTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NChar(100)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskHeader", DbType="NChar(100)")]
		public string taskHeader
		{
			get
			{
				return this._taskHeader;
			}
			set
			{
				if ((this._taskHeader != value))
				{
					this.OntaskHeaderChanging(value);
					this.SendPropertyChanging();
					this._taskHeader = value;
					this.SendPropertyChanged("taskHeader");
					this.OntaskHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskDeadline", DbType="DateTime")]
		public System.Nullable<System.DateTime> taskDeadline
		{
			get
			{
				return this._taskDeadline;
			}
			set
			{
				if ((this._taskDeadline != value))
				{
					this.OntaskDeadlineChanging(value);
					this.SendPropertyChanging();
					this._taskDeadline = value;
					this.SendPropertyChanged("taskDeadline");
					this.OntaskDeadlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taskDone", DbType="Int")]
		public System.Nullable<int> taskDone
		{
			get
			{
				return this._taskDone;
			}
			set
			{
				if ((this._taskDone != value))
				{
					this.OntaskDoneChanging(value);
					this.SendPropertyChanging();
					this._taskDone = value;
					this.SendPropertyChanged("taskDone");
					this.OntaskDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_sifTaskUserProject", Storage="_sifTaskUserProjects", ThisKey="idTask", OtherKey="idTask")]
		public EntitySet<sifTaskUserProject> sifTaskUserProjects
		{
			get
			{
				return this._sifTaskUserProjects;
			}
			set
			{
				this._sifTaskUserProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sifTaskUserProjects(sifTaskUserProject entity)
		{
			this.SendPropertyChanging();
			entity.Task = this;
		}
		
		private void detach_sifTaskUserProjects(sifTaskUserProject entity)
		{
			this.SendPropertyChanging();
			entity.Task = null;
		}
	}
}
#pragma warning restore 1591
